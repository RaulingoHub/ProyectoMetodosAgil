
package ProductoWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProductoWS", targetNamespace = "http://WSProducto/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProductoWS {


    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminar", targetNamespace = "http://WSProducto/", className = "ProductoWS.Eliminar")
    @ResponseWrapper(localName = "eliminarResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.EliminarResponse")
    @Action(input = "http://WSProducto/ProductoWS/eliminarRequest", output = "http://WSProducto/ProductoWS/eliminarResponse")
    public boolean eliminar(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param precio
     * @param cantidad
     * @param codigoProducto
     * @param nombreProducto
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregar", targetNamespace = "http://WSProducto/", className = "ProductoWS.Agregar")
    @ResponseWrapper(localName = "agregarResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.AgregarResponse")
    @Action(input = "http://WSProducto/ProductoWS/agregarRequest", output = "http://WSProducto/ProductoWS/agregarResponse")
    public boolean agregar(
        @WebParam(name = "nombreProducto", targetNamespace = "")
        String nombreProducto,
        @WebParam(name = "cantidad", targetNamespace = "")
        int cantidad,
        @WebParam(name = "precio", targetNamespace = "")
        double precio,
        @WebParam(name = "codigoProducto", targetNamespace = "")
        String codigoProducto);

    /**
     * 
     * @param precio
     * @param cantidad
     * @param id
     * @param codigoProducto
     * @param nombreProducto
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editar", targetNamespace = "http://WSProducto/", className = "ProductoWS.Editar")
    @ResponseWrapper(localName = "editarResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.EditarResponse")
    @Action(input = "http://WSProducto/ProductoWS/editarRequest", output = "http://WSProducto/ProductoWS/editarResponse")
    public boolean editar(
        @WebParam(name = "nombreProducto", targetNamespace = "")
        String nombreProducto,
        @WebParam(name = "cantidad", targetNamespace = "")
        int cantidad,
        @WebParam(name = "precio", targetNamespace = "")
        double precio,
        @WebParam(name = "codigoProducto", targetNamespace = "")
        String codigoProducto,
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<ProductoWS.Producto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarTodos", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarTodos")
    @ResponseWrapper(localName = "buscarTodosResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarTodosResponse")
    @Action(input = "http://WSProducto/ProductoWS/buscarTodosRequest", output = "http://WSProducto/ProductoWS/buscarTodosResponse")
    public List<Producto> buscarTodos();

    /**
     * 
     * @param codigo
     * @return
     *     returns ProductoWS.Producto
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarPorCodigo", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarPorCodigo")
    @ResponseWrapper(localName = "buscarPorCodigoResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarPorCodigoResponse")
    @Action(input = "http://WSProducto/ProductoWS/buscarPorCodigoRequest", output = "http://WSProducto/ProductoWS/buscarPorCodigoResponse")
    public Producto buscarPorCodigo(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo);

    /**
     * 
     * @param nombre
     * @return
     *     returns java.util.List<ProductoWS.Producto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarPorNombre", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarPorNombre")
    @ResponseWrapper(localName = "buscarPorNombreResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarPorNombreResponse")
    @Action(input = "http://WSProducto/ProductoWS/buscarPorNombreRequest", output = "http://WSProducto/ProductoWS/buscarPorNombreResponse")
    public List<Producto> buscarPorNombre(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param id
     * @return
     *     returns ProductoWS.Producto
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarPorID", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarPorID")
    @ResponseWrapper(localName = "buscarPorIDResponse", targetNamespace = "http://WSProducto/", className = "ProductoWS.BuscarPorIDResponse")
    @Action(input = "http://WSProducto/ProductoWS/buscarPorIDRequest", output = "http://WSProducto/ProductoWS/buscarPorIDResponse")
    public Producto buscarPorID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
