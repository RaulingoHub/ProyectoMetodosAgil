
package EmpleadoWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EmpleadoWS", targetNamespace = "http://WSEmpleado/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmpleadoWS {


    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminar", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.Eliminar")
    @ResponseWrapper(localName = "eliminarResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.EliminarResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/eliminarRequest", output = "http://WSEmpleado/EmpleadoWS/eliminarResponse")
    public boolean eliminar(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param puesto
     * @param codigo
     * @param id
     * @param nombre
     * @param rol
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editar", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.Editar")
    @ResponseWrapper(localName = "editarResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.EditarResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/editarRequest", output = "http://WSEmpleado/EmpleadoWS/editarResponse")
    public Boolean editar(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "codigo", targetNamespace = "")
        long codigo,
        @WebParam(name = "rol", targetNamespace = "")
        String rol,
        @WebParam(name = "puesto", targetNamespace = "")
        String puesto,
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param codigoEmpleado
     * @param contrase単a
     * @return
     *     returns EmpleadoWS.Empleado
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.LoginResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/loginRequest", output = "http://WSEmpleado/EmpleadoWS/loginResponse")
    public Empleado login(
        @WebParam(name = "codigoEmpleado", targetNamespace = "")
        long codigoEmpleado,
        @WebParam(name = "contrase\u00f1a", targetNamespace = "")
        String contrase単a);

    /**
     * 
     * @param puesto
     * @param codigo
     * @param nombre
     * @param rol
     * @param contrase単a
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregarEmpleado", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.AgregarEmpleado")
    @ResponseWrapper(localName = "agregarEmpleadoResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.AgregarEmpleadoResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/agregarEmpleadoRequest", output = "http://WSEmpleado/EmpleadoWS/agregarEmpleadoResponse")
    public boolean agregarEmpleado(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "codigo", targetNamespace = "")
        Long codigo,
        @WebParam(name = "rol", targetNamespace = "")
        String rol,
        @WebParam(name = "contrase\u00f1a", targetNamespace = "")
        String contrase単a,
        @WebParam(name = "puesto", targetNamespace = "")
        String puesto);

    /**
     * 
     * @return
     *     returns java.util.List<EmpleadoWS.Empleado>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarTodos", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.BuscarTodos")
    @ResponseWrapper(localName = "buscarTodosResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.BuscarTodosResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/buscarTodosRequest", output = "http://WSEmpleado/EmpleadoWS/buscarTodosResponse")
    public List<Empleado> buscarTodos();

    /**
     * 
     * @param codigo
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "autorizacion", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.Autorizacion")
    @ResponseWrapper(localName = "autorizacionResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.AutorizacionResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/autorizacionRequest", output = "http://WSEmpleado/EmpleadoWS/autorizacionResponse")
    public Long autorizacion(
        @WebParam(name = "codigo", targetNamespace = "")
        long codigo);

    /**
     * 
     * @param id
     * @return
     *     returns EmpleadoWS.Empleado
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarPorID", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.BuscarPorID")
    @ResponseWrapper(localName = "buscarPorIDResponse", targetNamespace = "http://WSEmpleado/", className = "EmpleadoWS.BuscarPorIDResponse")
    @Action(input = "http://WSEmpleado/EmpleadoWS/buscarPorIDRequest", output = "http://WSEmpleado/EmpleadoWS/buscarPorIDResponse")
    public Empleado buscarPorID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
